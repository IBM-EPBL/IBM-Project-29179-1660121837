#IBM Watson IOT Platform
#pip install wiotp-sdk
import wiotp.sdk.device
import time
import random
myConfig = { 
    "identity": {
        "orgId": "fn7xtr",
        "typeId": "TestDeviceType",
        "deviceId":"12345"
    },
    "auth": {
        "token": "X2ljBFrHole)aDVexj"
    }
}

def myCommandCallback(cmd):
    print("Message received from IBM IoT Platform: %s" % cmd.data['command'])
    m=cmd.data['command']
    if(m=="motoron"):
        print("*******////Motor is ON////*******")
    elif(m=="motoroff"):
        print("******////Motor is OFF////********")
    else:
        print("****///WRONG command////********")

client = wiotp.sdk.device.DeviceClient(config=myConfig, logHandlers=None)
client.connect()

while True:
    temp=random.randint(-20,125)
    hum=random.randint(0,100)
    moist=random.randint(0,100)

    if (moist >= 30):
        a= "High Moisture Level";
    elif(moist ==30):
        a= "Normal Moisture Level";
    else:
        a= "Low Moisture Level";
    myData={'temperature':temp, 'humidity':hum, 'soil_moisture':moist, 'moisture':a}
    client.publishEvent(eventId="status", msgFormat="json", data=myData, qos=0, onPublish=None)
    print("Published data Successfully: %s", myData)
    client.commandCallback = myCommandCallback
    time.sleep(2)

try:
    deviceOptions = {"org": organization, "type": deviceType, "id": deviceId, "auth-method": authMethod, "auth-token": authToken}
    deviceCli = ibmiotf.device.Client(deviceOptions)  
  	  
except Exception as e:  
    print("Exception detected in connecting device: %s" % str(e))  
    sys.exit()  
  
#Connecting to IBM watson...  
deviceCli.connect()  
  
while True:  
    #Getting values from sensors...
    temp= round( random.uniform(0,80),2)
    camera = ["Detected","Not Detected","Not Detected","Not Detected","Not Detected","Not Detected",]
    camera_reading = random.choice(camera)
    moist= round(random.uniform(0,100),2)
    hum= round(random.uniform(0,100),2)
    
      
    #storing the sensor data to send in json format to cloud.     
    temp= { 'Temp' : temp_sensor }
    camera_data = { 'Animal attack' : camera_reading}
    moist= { 'Moisture level' : moist_level}
    hum= { 'HUmidity level' : hum_level}  
    
    # publishing Sensor datas to IBM Watson for every 5-10 seconds.
    success = deviceCli.publishEvent("Temperature sensor", "json", temp_data, qos=0)  
    sleep(1)
    
    if success:           
        print ("... ...publish ok... ... ...")  
        print ("Published Temp = %s C" % temp_sensor,  "to IBM Watson")   
        success = deviceCli.publishEvent("PH sensor", "json", PH_data, qos=0)  
        sleep(1)
        
        
    if success:  
        print ("Published Animal attack %s " % camera_reading,  "to IBM Watson")   
        success = deviceCli.publishEvent("Flame sensor", "json", flame_data, qos=0)  
        sleep(1)
        
        
    if success:  
        print ("Published Moisture level = %s " % moist_level,  "to IBM Watson")      
        success = deviceCli.publishEvent("Water sensor", "json", water_data, qos=0)  
        sleep(1)
        
    if success:  
        print ("Published Water level = %s cm" % water_level,  "to IBM Watson")  
        print ("")  
  
    #Automation to control sprinklers by present temperature an to send alert message to IBM Watson.  
       
    if (temp_sensor > 35):  
        print("sprinkler-1 is ON")  
        success = deviceCli.publishEvent("Alert1", "json",{ 'alert1' : "Temperature(%s) is high, sprinkerlers are turned ON" %temp_sensor }, qos=0)  
        sleep(1)

    if success:               
        print( 'Published Alert1 : ',  "Temperature(%s) is high, sprinkerlers are turned ON" %temp_sensor,"to IBM Watson")  
        print("")  
    else:  
        print("sprinkler-1 is OFF")
        print("")  
        
     #To send alert message to farmer that animal attack on crops.  
               
    if (camera_reading == "Detected"):  
        success = deviceCli.publishEvent("Alert3", "json", { 'alert3' : "Animal attack on crops detected" }, qos=0)  
        sleep(1)         
    if success:  
        print('Published Alert3 : ' , "Animal attack on crops detected","to IBM Watson","to IBM Watson")  
        print("")  
  
#command recived by farmer      
deviceCli.commandCallback = myCommandCallback

# Disconnect the device and application from the cloud
deviceCli.disconnect()
